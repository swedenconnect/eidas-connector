<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>eidas-connector-idp</artifactId>
  <packaging>jar</packaging>

  <parent>
    <groupId>se.elegnamnden.eidas.idp</groupId>
    <artifactId>eidas-connector-base-parent</artifactId>
    <version>1.0.1-SNAPSHOT</version>
  </parent>

  <name>eIDAS :: Swedish eIDAS connector</name>
  <description>Swedish eIDAS connector IdP</description>
  <url>https://github.com/elegnamnden/eidas-connector</url>
  
  <licenses>
    <license>
      <name>GNU General Public License, Version 3</name>
      <url>http://www.gnu.org/licenses/gpl-3.0.html</url>
      <distribution>repo</distribution>
      <comments>A free, copyleft license for software and other kinds of works</comments>
    </license>
  </licenses>
  
  <scm>
    <connection>scm:git:https://github.com/elegnamnden/eidas-connector.git</connection>
    <developerConnection>scm:git:https://github.com/elegnamnden/eidas-connector.git</developerConnection>
    <url>https://github.com/elegnamnden/eidas-connector/tree/master</url>
  </scm>

  <developers>
    <developer>
      <name>Stefan Santesson</name>
      <email>stefan@aaa-sec.com</email>
      <organization>3xA Security AB</organization>
      <organizationUrl>http://aaa-sec.com</organizationUrl>
    </developer>
    <developer>
      <name>Martin Lindstr√∂m</name>
      <email>martin.lindstrom@litsec.se</email>
      <organization>Litsec AB</organization>
      <organizationUrl>http://www.litsec.se</organizationUrl>
    </developer>
  </developers>
  
  <properties>  
    <tomcat.version>8.5.9</tomcat.version>
    <docker.image.prefix>docker.eidastest.se:5000</docker.image.prefix>
  </properties>

  <dependencies>
  
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>eidas-connector-sp</artifactId>
      <version>${project.version}</version>
    </dependency>
  
    <dependency>
      <groupId>se.elegnamnden.eidas.commons</groupId>
      <artifactId>metadataconfig</artifactId>
    </dependency>
    
    <dependency>
      <groupId>se.elegnamnden.eidas.commons</groupId>
      <artifactId>eidas-mappings</artifactId>
    </dependency>
  
    <dependency>
      <groupId>se.litsec.opensaml</groupId>
      <artifactId>opensaml3-ext</artifactId>
    </dependency>

    <dependency>
      <groupId>se.litsec.opensaml.sweid</groupId>
      <artifactId>swedish-eid-opensaml3</artifactId>
    </dependency>      

    <dependency>
      <groupId>se.litsec.eidas</groupId>
      <artifactId>eidas-opensaml3</artifactId>
    </dependency>
    
    <dependency>
      <groupId>se.litsec.sweid.idp</groupId>
      <artifactId>shibboleth-authn-support</artifactId>
    </dependency>
    
    <dependency>
      <groupId>se.litsec.sweid.idp</groupId>
      <artifactId>shibboleth-attribute-support</artifactId>
    </dependency>
    
    <dependency>
      <groupId>se.litsec.sweid.idp</groupId>
      <artifactId>shibboleth-metadata-support</artifactId>
    </dependency>
    
    <dependency>
      <groupId>se.litsec.sweid.idp</groupId>
      <artifactId>shibboleth-sweid-extensions</artifactId>
    </dependency>    
    
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
    </dependency>

    <dependency>
      <groupId>jstl</groupId>
      <artifactId>jstl</artifactId>
    </dependency>
    
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
    </dependency>
    
    <dependency>
      <groupId>net.shibboleth.idp</groupId>
      <artifactId>idp-authn-api</artifactId>
    </dependency>
    
    <dependency>
      <groupId>net.shibboleth.idp</groupId>
      <artifactId>idp-authn-impl</artifactId>
    </dependency>
    
    <dependency>
      <groupId>net.shibboleth.idp</groupId>
      <artifactId>idp-attribute-resolver-impl</artifactId>
    </dependency>
    
    <dependency>
      <groupId>net.shibboleth.idp</groupId>
      <artifactId>idp-attribute-resolver-spring</artifactId>
    </dependency>
    
    <dependency>
      <groupId>net.shibboleth.idp</groupId>
      <artifactId>idp-session-impl</artifactId>
    </dependency>
    
    <dependency>
      <groupId>net.shibboleth.idp</groupId>
      <artifactId>idp-ui</artifactId>
    </dependency>    
    
    <dependency>
      <groupId>org.opensaml</groupId>
      <artifactId>opensaml-core</artifactId>
    </dependency>
    
    <dependency>
      <groupId>org.opensaml</groupId>
      <artifactId>opensaml-saml-api</artifactId>
    </dependency>
    
    <dependency>
      <groupId>org.opensaml</groupId>
      <artifactId>opensaml-messaging-api</artifactId>
    </dependency>
    
    <dependency>
      <groupId>org.opensaml</groupId>
      <artifactId>opensaml-messaging-impl</artifactId>
    </dependency>
    
    <dependency>
      <groupId>org.opensaml</groupId>
      <artifactId>opensaml-profile-api</artifactId>
    </dependency>
    
    <dependency>
      <groupId>org.opensaml</groupId>
      <artifactId>opensaml-profile-impl</artifactId>
    </dependency>
    
    <dependency>
      <groupId>org.opensaml</groupId>
      <artifactId>opensaml-saml-impl</artifactId>
    </dependency>
        
    <dependency>
      <groupId>org.springframework.mobile</groupId>
      <artifactId>spring-mobile-device</artifactId>
    </dependency>
    
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.16.8</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*.properties</include>
          <include>logback-local.xml</include>
        </includes>
      </resource>
    </resources>

    <plugins>

      <plugin>
        <!-- https://maven.apache.org/plugins/maven-dependency-plugin/unpack-mojo.html -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.8</version>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>se.litsec.sweid.idp</groupId>
                  <artifactId>shibboleth-base</artifactId>
                  <version>${shibboleth-base-package.version}</version>
                  <type>zip</type>
                </artifactItem>
                <artifactItem>
                  <groupId>org.apache.tomcat</groupId>
                  <artifactId>tomcat</artifactId>
                  <version>${tomcat.version}</version>
                  <type>zip</type>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>

          <execution>
            <id>copy</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/shibboleth/edit-webapp/WEB-INF/lib</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>true</overWriteSnapshots>
              <includeScope>runtime</includeScope>
            </configuration>
          </execution>

        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <executions>
        
          <execution>
            <id>copy-credentials</id>
            <phase>process-resources</phase>
            <configuration>
              <target>
                <echo>Copy Shibboleth metadata and credentials</echo>
                <copy todir="${project.build.directory}/shibboleth/metadata" overwrite="true">
                  <fileset dir="${project.build.directory}/dependency/shibboleth-base/metadata"/>
                </copy>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>            
          </execution>
 
          <execution>
            <id>install-shibboleth</id>
            <phase>process-resources</phase>
            <configuration>
              <target name="install-shibboleth">
                <copy file="${project.basedir}/src/main/shibboleth/idp.merge.properties" tofile="${project.build.directory}/idp.merge.properties"/>
                
                <echo>Running install on Shibboleth</echo>
                <exec dir="${project.build.directory}/dependency/shibboleth-base/bin/" executable="cmd" osfamily="Windows">
                  <arg value="/c"/>
                  <!-- <arg value="if not exist ${project.build.directory}/shibboleth"/>--> <!-- Check if install has run. This will speedup local development. -->
                  <arg value="install.bat"/>
                  <arg value="-Didp.target.dir=${project.build.directory}/shibboleth"/>
                  <arg value="-Didp.noprompt=true"/>
                  <arg value="-Didp.merge.properties=${project.build.directory}/idp.merge.properties"/>
                  <arg value="-Didp.host.name=www.elegnamnden.se"/>
                  <arg value="-Didp.src.dir=."/>
                  <arg value="-Didp.keystore.password=pswForBackChanelKeystore"/>
                  <arg value="-Didp.sealer.password=localDevelopmentSealerPassword"/>
                </exec>
                <exec dir="${project.build.directory}/dependency/shibboleth-base/bin/" executable="./install.sh" osfamily="unix">                
                  <!-- <arg value="if not exist ${project.build.directory}/shibboleth"/> --><!-- Check if install has run. This will speedup local development. -->
                  <arg value="-Didp.target.dir=${project.build.directory}/shibboleth" />
                  <arg value="-Didp.noprompt=true"/>
                  <arg value="-Didp.merge.properties=${project.build.directory}/idp.merge.properties"/>
                  <arg value="-Didp.host.name=www.elegnamnden.se"/>
                  <arg value="-Didp.src.dir=."/>
                  <arg value="-Didp.keystore.password=randomKeystorePsw"/>
                  <arg value="-Didp.sealer.password=randomSealername"/>
                </exec>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          
          <execution>
            <id>copy-shibboleth-config</id>
            <phase>process-resources</phase>
            <configuration>
              <target>
                <echo>Copy Shibboleth override config</echo>
                <copy todir="${project.build.directory}/shibboleth/" overwrite="true">
                  <fileset dir="${project.basedir}/src/main/shibboleth/config"/>
                </copy>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>            
          </execution>
                    
          <execution>
            <id>run-shibboleth-build</id>
            <phase>package</phase>
            <configuration>
              <target>
                
                <echo>Replace values in idp.properties ${project.build.directory}/shibboleth-${project.artifactId}-${project.version}/conf/idp.properties</echo>
                <propertyfile file="${project.build.directory}/shibboleth/conf/idp.properties">
                  <entry key="idp.entityID" value="%{idp.entityID}" />
                  <entry key="idp.sealer.storeResource" value="%{idp.sealer.storeResource}" />
                  <entry key="idp.sealer.versionResource" value="%{idp.sealer.versionResource}" />
                  <entry key="idp.sealer.storePassword" value="%{idp.sealer.password}" />
                  <entry key="idp.sealer.keyPassword" value="%{idp.sealer.password}" />
                  <entry key="idp.signing.key" value="%{idp.signing.key}" />
                  <entry key="idp.signing.cert" value="%{idp.signing.cert}" />
                  <entry key="idp.encryption.key" value="%{idp.encryption.key}" />
                  <entry key="idp.encryption.cert" value="%{idp.encryption.cert}" />
                  <entry key="idp.metadata.signing.key" value="%{idp.metadata.signing.key}" />
                  <entry key="idp.metadata.signing.cert" value="%{idp.metadata.signing.cert}" />
                </propertyfile>
                             
                <echo>Copy tomcat override config</echo>
                <copy todir="${project.build.directory}/dependency/apache-tomcat-${tomcat.version}/conf/" overwrite="true">
                  <fileset dir="${project.basedir}/src/main/tomcat"/>
                </copy>

                <echo>Copy webapp content</echo>
                <copy todir="${project.build.directory}/shibboleth/edit-webapp" overwrite="true">
                  <fileset dir="${project.basedir}/src/main/webapp"/>
                </copy>

                <echo>Copy this project lib</echo>
                <!-- TODO: Check if name is correct -->                 
                <copy file="${project.build.directory}/${project.artifactId}-${project.version}.jar" tofile="${project.build.directory}/shibboleth/edit-webapp/WEB-INF/lib/${project.build.finalName}.jar"/>

                <echo>Running build on Shibboleth installation</echo>
                <exec dir="${project.build.directory}/shibboleth/bin/" executable="cmd" osfamily="windows">
                  <arg value="/c"/>
                  <arg value="build.bat"/>
                  <arg value="-Didp.noprompt=true"/>
                </exec>
                <exec dir="${project.build.directory}/shibboleth/bin/" executable="./build.sh" osfamily="unix">
                  <arg value="-Didp.noprompt=true"/>
                </exec>
                
                <echo>Clean up</echo>
                <delete file="${project.build.directory}/shibboleth/idp_ant.log" />
                <delete includeEmptyDirs="true">
                  <fileset dir="${project.build.directory}/shibboleth/" includes="old-*" />
                </delete>
                <delete>
                  <fileset dir="${project.build.directory}/shibboleth/logs/" includes="*.*" />
                </delete>

                <echo>Installing new war into tomcat</echo>
                <delete includeEmptyDirs="true">
                  <fileset dir="${project.build.directory}/dependency/apache-tomcat-${tomcat.version}/webapps/" includes="**/*" />
                </delete>
                            
                <copy file="${project.build.directory}/shibboleth/war/idp.war" tofile="${project.build.directory}/dependency/apache-tomcat-${tomcat.version}/webapps/idp.war"/>
                <copy file="${project.basedir}/src/main/scripts/dockerStart.sh" tofile="${project.build.directory}/dependency/apache-tomcat-${tomcat.version}/bin/dockerStart.sh" />
                                
                <chmod perm="755" dir="${project.build.directory}/dependency/apache-tomcat-${tomcat.version}/bin" includes="**/*.sh"/>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <!-- Build the distribution zip -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.0.0</version>
        <configuration>
          <descriptors>
            <descriptor>${basedir}/src/assembly/eidas-connector-dist.xml</descriptor>
          </descriptors>
          <finalName>${project.artifactId}-${project.version}</finalName>
          <appendAssemblyId>false</appendAssemblyId>
        </configuration>
        <executions>
          <execution>
            <id>build-distribution</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Attach the zip file as an artifact of this build to get it installed and deployed -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <id>attach-artifacts</id>
            <phase>package</phase>
            <goals>
              <goal>attach-artifact</goal>
            </goals>
            <configuration>
              <artifacts>
                <artifact>
                  <file>${project.build.directory}/${project.artifactId}-${project.version}.zip</file>
                  <type>zip</type>
                </artifact>
              </artifacts>
            </configuration>
          </execution>
        </executions>
      </plugin>      
      
      <!-- Support for Docker -->
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>dockerfile-maven-plugin</artifactId>
        <version>1.3.6</version>
        <configuration>          
          <repository>${docker.image.prefix}/${project.artifactId}</repository>
          <tag>latest</tag>
          <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
        </configuration>
      </plugin>      

    </plugins>
  </build>

</project>
