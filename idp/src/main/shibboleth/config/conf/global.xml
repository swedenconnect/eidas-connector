<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
                           
       default-init-method="initialize"
       default-destroy-method="destroy">
              
  <!-- eIDAS metadata -->
  <bean id="eidas.MetadataConfig" class="se.elegnamnden.eidas.metadataconfig.MetadataConfig" scope="singleton"
    init-method="recache" depends-on="shibboleth.OpenSAMLConfig"
    c:dataDirectory="%{idp.metadata.eidas.cache-directory}"
    c:metadataListUrl="%{idp.metadata.eidas.service-list.url}"
    c:metadataListCertFile="%{idp.metadata.eidas.service-list.validation-certificate}"
    c:metadataUrl="%{idp.metadata.eidas.federation.url}"
    c:metadataCertFile="%{idp.metadata.eidas.federation.validation-certificate}"
    c:mwParamList-ref="eidas.mwParamList" 
    p:ignoreSignatureValidation="%{idp.metadata.eidas.ignore-signature-validation:false}" />
    
  <util:list id="eidas.mwParamList">
    <bean class="se.elegnamnden.eidas.metadataconfig.data.MiddleWareParams"
      c:entityID="https://demw.eidastest.se" c:serviceUrlPrefix="https://demw.eidastest.se" />
  </util:list>
  
  <!-- Connector services -->
  
  <bean id="eidas.AuthenticationContextService" class="se.elegnamnden.eidas.idp.connector.service.AuthenticationContextService" scope="singleton"
    p:loaMappings-ref="eidas.LevelOfAssuranceMappings" 
    p:authnContextweightMap-ref="shibboleth.AuthenticationPrincipalWeightMap" />
  
  <bean id="eidas.LevelOfAssuranceMappings" class="se.elegnamnden.eidas.mapping.loa.StaticLevelOfAssuranceMappings" scope="singleton" />
  
  <bean id="eidas.AttributeProcessingService" class="se.elegnamnden.eidas.idp.connector.service.AttributeProcessingService" scope="singleton">
    <property name="attributeMappings">
      <bean class="se.elegnamnden.eidas.mapping.attributes.impl.NaturalPersonStaticAttributeMappings" />
    </property>
  </bean>
  
  <!-- Connector SP -->
  
  <!-- TODO: move the connector SP into a reloadable Spring subsystem so that we get support for reloading of keys etc. -->
      
  <bean id="eidas.AuthnRequestGenerator" class="se.elegnamnden.eidas.idp.connector.sp.impl.EidasAuthnRequestGeneratorImpl" scope="singleton"
    c:entityID="%{idp.sp.entityID}" 
    p:name="%{idp.sp.name}"
    p:signingCredentials-ref="eidas.SpSigningCredential" />
    
  <bean id="eidas.ResponseProcessor" class="se.elegnamnden.eidas.idp.connector.sp.impl.ResponseProcessorImpl" scope="singleton"
    p:encryptionCredentials-ref="eidas.SpEncryptionCredentials"
    p:messageReplayChecker-ref="eidas.MessageReplayChecker" 
    p:responseProfileValidator-ref="eidas.ResponseProfileValidator" />
    
  <bean id="eidas.AbstractValidator" class="se.litsec.opensaml.common.validation.AbstractObjectValidator" abstract="true"
    p:strictValidation="%{idp.sp.strict-validation:false}" />
      
  <bean id="eidas.ResponseProfileValidator" class="se.elegnamnden.eidas.idp.connector.sp.validation.EidasResponseProfileValidator" scope="singleton"
    parent="eidas.AbstractValidator" />
    
  <bean id="eidas.MessageReplayChecker" class="se.litsec.opensaml.saml2.common.response.MessageReplayCheckerImpl" scope="singleton"
    p:replayCache-ref="shibboleth.ReplayCache"
    p:replayCacheExpiration="%{idp.policy.messageLifetime:PT5M}"
    p:replayCacheName="eidas-sp" />
  
  <bean id="eidas.SpSigningCredential" class="net.shibboleth.idp.profile.spring.factory.BasicX509CredentialFactoryBean"
    p:privateKeyResource="%{idp.sp.signing.key}"
    p:certificateResource="%{idp.sp.signing.cert}"
    p:entityId="%{idp.sp.entityID}" />  
    
  <util:list id="eidas.SpEncryptionCredentials">
    <bean class="net.shibboleth.idp.profile.spring.factory.BasicX509CredentialFactoryBean"
      p:privateKeyResource="%{idp.sp.encryption.key}"
      p:certificateResource="%{idp.sp.encryption.cert}"
      p:entityId="%{idp.sp.entityID}" />  
  </util:list>
        
</beans>
