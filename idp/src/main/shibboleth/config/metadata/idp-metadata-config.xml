<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
                           
       default-init-method="initialize"
       default-destroy-method="destroy">
       
  <!--
    Configuration file for the IdP metadata. 
   -->
            
  <!--
    sweid.IdpMetadata - The SAML EntityDescriptor for this IdP's metadata. 
   -->
  <bean id="sweid.IdpMetadata" class="se.litsec.opensaml.saml2.metadata.build.spring.IdpEntityDescriptorFactoryBean" scope="singleton" depends-on="shibboleth.OpenSAMLConfig"
    c:resource="%{idp.home}/metadata/idp-metadata.xml">
    
    <!-- entityID -->
    <property name="entityID" value="%{idp.entityID}" />
    
    <property name="cacheDuration" value="%{idp.metadata.cacheDuration:3600000}" />

    <!-- 
      The "urn:oasis:names:tc:SAML:attribute:assurance-certification" extension holding the authentication context URI:s 
      that this IdP services.  
     -->
    <property name="assuranceCertificationUris">
      <bean parent="shibboleth.CommaDelimStringArray" c:_0="#{'%{idp.metadata.assuranceCertificationUris:}'.trim()}" />
    </property>
    
    <!--
      The "http://macedir.org/entity-category" extension values. According to the Swedish eID Framework. 
     -->
    <property name="entityCategories">
      <bean parent="shibboleth.CommaDelimStringArray" c:_0="#{'%{idp.metadata.entityCategories:}'.trim()}" />
    </property>

    <!--
      Does this IdP require AuthnRequests to be signed?
      See also the relying-party.xml. 
     -->
    <property name="wantAuthnRequestsSigned" value="%{idp.metadata.wantAuthnRequestsSigned}" />

    <!-- Key descriptors (will be changed to a dynamically reloadable bean) -->    
    <property name="keyDescriptors">
      <util:list>
        <bean class="se.litsec.opensaml.saml2.metadata.build.spring.KeyDescriptorFactoryBean" p:use="SIGNING" p:certificateResource="%{idp.signing.cert}" />
        <bean class="se.litsec.opensaml.saml2.metadata.build.spring.KeyDescriptorFactoryBean" p:use="ENCRYPTION" p:certificateResource="%{idp.encryption.cert}" />
      </util:list>
    </property>
    
    <!--
      The NameIDFormat:s supported by this IdP. 
     -->
    <property name="nameIDFormats">
      <bean parent="shibboleth.CommaDelimStringArray" c:_0="#{'%{idp.metadata.nameIDFormats:}'.trim()}" />
    </property>

    <!--
      Locations for Redirect and POST bindings of SingleSignOnService elements. 
     -->
    <property name="singleSignOnServices">
      <util:list>
        <bean class="se.litsec.opensaml.saml2.metadata.build.spring.SingleSignOnServiceFactoryBean">
          <property name="binding">
            <util:constant static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML2_REDIRECT_BINDING_URI" />
          </property>
          <property name="location" value="%{idp.baseurl}/profile/SAML2/Redirect/SSO" />
        </bean>
        <bean class="se.litsec.opensaml.saml2.metadata.build.spring.SingleSignOnServiceFactoryBean">
          <property name="binding">
            <util:constant static-field="org.opensaml.saml.common.xml.SAMLConstants.SAML2_POST_BINDING_URI" />
          </property>
          <property name="location" value="%{idp.baseurl}/profile/SAML2/POST/SSO" />
        </bean>        
      </util:list>
    </property>
    
    <!--
      UIInfo element - Make sure to update metadata.properties with values suitable for your IdP. 
     -->
    <property name="uiInfoExtension">
      <bean class="se.litsec.opensaml.saml2.metadata.build.spring.UIInfoFactoryBean">
        <property name="displayNames">
          <util:list>
            <value>en-%{idp.metadata.uiInfo.displayName.en}</value>
            <value>sv-%{idp.metadata.uiInfo.displayName.sv}</value>
          </util:list>
        </property>
        <property name="descriptions">
          <util:list>
            <value>en-%{idp.metadata.uiInfo.description.en}</value>
            <value>sv-%{idp.metadata.uiInfo.description.sv}</value>
          </util:list>
        </property>
        <property name="logos">
          <util:list>
            <bean class="se.litsec.opensaml.saml2.metadata.build.spring.LogoFactoryBean" 
              c:url="%{idp.metadata.uiInfo.smallLogo.url}" 
              c:width="%{idp.metadata.uiInfo.smallLogo.width}" 
              c:height="%{idp.metadata.uiInfo.smallLogo.height}" />
            <bean class="se.litsec.opensaml.saml2.metadata.build.spring.LogoFactoryBean" 
              c:url="%{idp.metadata.uiInfo.largeLogo.url}" 
              c:width="%{idp.metadata.uiInfo.largeLogo.width}" 
              c:height="%{idp.metadata.uiInfo.largeLogo.height}" />                        
          </util:list>
        </property>
      </bean>
    </property>
    
    <property name="organization">
      <bean class="se.litsec.opensaml.saml2.metadata.build.spring.OrganizationFactoryBean">
        <property name="organizationNames">
          <util:list>
            <value>en-%{idp.metadata.organization.name.en}</value>
            <value>sv-%{idp.metadata.organization.name.sv}</value>
          </util:list>
        </property>
        <property name="organizationDisplayNames">
          <util:list>
            <value>en-%{idp.metadata.organization.displayName.en}</value>
            <value>sv-%{idp.metadata.organization.displayName.sv}</value>
          </util:list>
        </property>
        <property name="organizationURLs">
          <util:list>
            <value>en-%{idp.metadata.organization.url.en}</value>
            <value>sv-%{idp.metadata.organization.url.sv}</value>
          </util:list>
        </property>
      </bean>
    </property>
    
    <property name="contactPersons">
      <util:list>
        <bean class="se.litsec.opensaml.saml2.metadata.build.spring.ContactPersonFactoryBean"
          p:type="SUPPORT"
          p:company="%{idp.metadata.contactPerson.support.company}"
          p:emailAddresses="%{idp.metadata.contactPerson.support.emailAddress}" />
        <bean class="se.litsec.opensaml.saml2.metadata.build.spring.ContactPersonFactoryBean"
          p:type="TECHNICAL"
          p:company="%{idp.metadata.contactPerson.technical.company}"
          p:emailAddresses="%{idp.metadata.contactPerson.technical.emailAddress}" />          
      </util:list>
    </property>
    
  </bean>
  
  <bean id="sweid.idp.metadata.Validity" class="java.time.Duration" factory-method="ofMinutes">
    <constructor-arg value="%{idp.metadata.validity:10800}" />
  </bean>
  
  <!--
    The credential used to sign the metadata. 
   -->
  <bean id="sweid.MetadataSigningCredential" parent="shibboleth.AbstractCredential"
    p:pkcs11Enabled="%{idp.metadata.signing.pkcs11.enabled:false}"
    p:privateKeyResource="%{idp.metadata.signing.key:%{idp.home}/conf/credentials/dummy.key}"
    p:certificateResource="%{idp.metadata.signing.cert}" 
    p:alias="%{idp.metadata.signing.pkcs11.alias:}"
    p:pin="%{idp.metadata.signing.pkcs11.pin:}" />   

<!--    
  <bean id="sweid.MetadataSigningCredential" class="net.shibboleth.idp.profile.spring.factory.BasicX509CredentialFactoryBean"
    p:privateKeyResource="%{idp.metadata.signing.key}"
    p:certificateResource="%{idp.metadata.signing.cert}"
    p:entityId="%{idp.entityID}" />
-->
    
  <!--
    The container wrapping the metadata and is used for publishing. 
   -->
  <bean id="sweid.IdpMetadataContainer" class="se.litsec.opensaml.saml2.metadata.EntityDescriptorContainer" scope="singleton"
    c:descriptor-ref="sweid.IdpMetadata"
    c:signatureCredentials-ref="sweid.MetadataSigningCredential" 
    p:validity-ref="sweid.idp.metadata.Validity" />
    
  <import resource="sp-metadata-config.xml "/>
    
</beans>
