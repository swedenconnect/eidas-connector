{
  "groups": [
    {
      "name": "connector.eidas.credentials.sign.pem",
      "type": "se.swedenconnect.security.credential.config.properties.PemCredentialConfigurationProperties",
      "description": "Configuration for a PEM-based credential."
    },
    {
      "name": "connector.eidas.credentials.sign.jks",
      "type": "se.swedenconnect.security.credential.config.properties.StoreCredentialConfigurationProperties",
      "description": "Configuration for a JKS (Java KeyStore) based credential."
    },
    {
      "name": "connector.eidas.credentials.sign.jks.store",
      "type": "se.swedenconnect.security.credential.config.properties.StoreConfigurationProperties",
      "description": "Configuration for the KeyStore holding the key pair entry."
    },
    {
      "name": "connector.eidas.credentials.sign.jks.key",
      "type": "se.swedenconnect.security.credential.config.properties.StoreCredentialConfigurationProperties$KeyConfigurationProperties",
      "description": "Configuration for the key pair entry of the store."
    },
    {
      "name": "connector.eidas.credentials.sign.jks.store.pkcs11",
      "type": "se.swedenconnect.security.credential.config.properties.StoreConfigurationProperties$Pkcs11ConfigurationProperties",
      "description": "If the type is \"PKCS11\" and a provider that is not statically configured for PKCS#11, additional PKCS#11 configuration needs to be supplied. Note that the security provider used must support PKCS#11 via the KeyStoreSpi interface. The \"SunPKCS11\" is such a provider."
    },
    {
      "name": "connector.eidas.credentials.sign.jks.store.pkcs11.settings",
      "type": "se.swedenconnect.security.credential.config.properties.StoreConfigurationProperties$Pkcs11ConfigurationProperties$Pkcs11SettingsProperties",
      "description": "Custom PKCS#11 settings."
    },
    {
      "name": "connector.eidas.credentials.encrypt.pem",
      "type": "se.swedenconnect.security.credential.config.properties.PemCredentialConfigurationProperties",
      "description": "Configuration for a PEM-based credential."
    },
    {
      "name": "connector.eidas.credentials.encrypt.jks",
      "type": "se.swedenconnect.security.credential.config.properties.StoreCredentialConfigurationProperties",
      "description": "Configuration for a JKS (Java KeyStore) based credential."
    },
    {
      "name": "connector.eidas.credentials.encrypt.jks.store",
      "type": "se.swedenconnect.security.credential.config.properties.StoreConfigurationProperties",
      "description": "Configuration for the KeyStore holding the key pair entry."
    },
    {
      "name": "connector.eidas.credentials.encrypt.jks.key",
      "type": "se.swedenconnect.security.credential.config.properties.StoreCredentialConfigurationProperties$KeyConfigurationProperties",
      "description": "Configuration for the key pair entry of the store."
    },
    {
      "name": "connector.eidas.credentials.encrypt.jks.store.pkcs11",
      "type": "se.swedenconnect.security.credential.config.properties.StoreConfigurationProperties$Pkcs11ConfigurationProperties",
      "description": "If the type is \"PKCS11\" and a provider that is not statically configured for PKCS#11, additional PKCS#11 configuration needs to be supplied. Note that the security provider used must support PKCS#11 via the KeyStoreSpi interface. The \"SunPKCS11\" is such a provider."
    },
    {
      "name": "connector.eidas.credentials.encrypt.jks.store.pkcs11.settings",
      "type": "se.swedenconnect.security.credential.config.properties.StoreConfigurationProperties$Pkcs11ConfigurationProperties$Pkcs11SettingsProperties",
      "description": "Custom PKCS#11 settings."
    },
    {
      "name": "connector.eidas.credentials.default-crededential.pem",
      "type": "se.swedenconnect.security.credential.config.properties.PemCredentialConfigurationProperties",
      "description": "Configuration for a PEM-based credential."
    },
    {
      "name": "connector.eidas.credentials.default-crededential.jks",
      "type": "se.swedenconnect.security.credential.config.properties.StoreCredentialConfigurationProperties",
      "description": "Configuration for a JKS (Java KeyStore) based credential."
    },
    {
      "name": "connector.eidas.credentials.default-crededential.jks.store",
      "type": "se.swedenconnect.security.credential.config.properties.StoreConfigurationProperties",
      "description": "Configuration for the KeyStore holding the key pair entry."
    },
    {
      "name": "connector.eidas.credentials.default-crededential.jks.key",
      "type": "se.swedenconnect.security.credential.config.properties.StoreCredentialConfigurationProperties$KeyConfigurationProperties",
      "description": "Configuration for the key pair entry of the store."
    },
    {
      "name": "connector.eidas.credentials.default-crededential.jks.store.pkcs11",
      "type": "se.swedenconnect.security.credential.config.properties.StoreConfigurationProperties$Pkcs11ConfigurationProperties",
      "description": "If the type is \"PKCS11\" and a provider that is not statically configured for PKCS#11, additional PKCS#11 configuration needs to be supplied. Note that the security provider used must support PKCS#11 via the KeyStoreSpi interface. The \"SunPKCS11\" is such a provider."
    },
    {
      "name": "connector.eidas.credentials.default-crededential.jks.store.pkcs11.settings",
      "type": "se.swedenconnect.security.credential.config.properties.StoreConfigurationProperties$Pkcs11ConfigurationProperties$Pkcs11SettingsProperties",
      "description": "Custom PKCS#11 settings."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.pem",
      "type": "se.swedenconnect.security.credential.config.properties.PemCredentialConfigurationProperties",
      "description": "Configuration for a PEM-based credential."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.jks",
      "type": "se.swedenconnect.security.credential.config.properties.StoreCredentialConfigurationProperties",
      "description": "Configuration for a JKS (Java KeyStore) based credential."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.jks.store",
      "type": "se.swedenconnect.security.credential.config.properties.StoreConfigurationProperties",
      "description": "Configuration for the KeyStore holding the key pair entry."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.jks.key",
      "type": "se.swedenconnect.security.credential.config.properties.StoreCredentialConfigurationProperties$KeyConfigurationProperties",
      "description": "Configuration for the key pair entry of the store."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.jks.store.pkcs11",
      "type": "se.swedenconnect.security.credential.config.properties.StoreConfigurationProperties$Pkcs11ConfigurationProperties",
      "description": "If the type is \"PKCS11\" and a provider that is not statically configured for PKCS#11, additional PKCS#11 configuration needs to be supplied. Note that the security provider used must support PKCS#11 via the KeyStoreSpi interface. The \"SunPKCS11\" is such a provider."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.jks.store.pkcs11.settings",
      "type": "se.swedenconnect.security.credential.config.properties.StoreConfigurationProperties$Pkcs11ConfigurationProperties$Pkcs11SettingsProperties",
      "description": "Custom PKCS#11 settings."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.pem",
      "type": "se.swedenconnect.security.credential.config.properties.PemCredentialConfigurationProperties",
      "description": "Configuration for a PEM-based credential."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.jks",
      "type": "se.swedenconnect.security.credential.config.properties.StoreCredentialConfigurationProperties",
      "description": "Configuration for a JKS (Java KeyStore) based credential."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.jks.store",
      "type": "se.swedenconnect.security.credential.config.properties.StoreConfigurationProperties",
      "description": "Configuration for the KeyStore holding the key pair entry."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.jks.key",
      "type": "se.swedenconnect.security.credential.config.properties.StoreCredentialConfigurationProperties$KeyConfigurationProperties",
      "description": "Configuration for the key pair entry of the store."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.jks.store.pkcs11",
      "type": "se.swedenconnect.security.credential.config.properties.StoreConfigurationProperties$Pkcs11ConfigurationProperties",
      "description": "If the type is \"PKCS11\" and a provider that is not statically configured for PKCS#11, additional PKCS#11 configuration needs to be supplied. Note that the security provider used must support PKCS#11 via the KeyStoreSpi interface. The \"SunPKCS11\" is such a provider."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.jks.store.pkcs11.settings",
      "type": "se.swedenconnect.security.credential.config.properties.StoreConfigurationProperties$Pkcs11ConfigurationProperties$Pkcs11SettingsProperties",
      "description": "Custom PKCS#11 settings."
    }
  ],
  "properties": [
    {
      "name": "connector.eidas.credentials.sign.bundle",
      "type": "java.lang.String",
      "description": "Pointer to a pre-registered credential."
    },
    {
      "name": "connector.eidas.credentials.sign.jks.name",
      "type": "java.lang.String",
      "description": "The name of the credential."
    },
    {
      "name": "connector.eidas.credentials.sign.jks.key-id",
      "type": "java.lang.String",
      "description": "Key identifier metadata property."
    },
    {
      "name": "connector.eidas.credentials.sign.jks.issued-at",
      "type": "java.time.Instant",
      "description": "Issued-at metadata property."
    },
    {
      "name": "connector.eidas.credentials.sign.jks.expires-at",
      "type": "java.time.Instant",
      "description": "Expires-at metadata property."
    },
    {
      "name": "connector.eidas.credentials.sign.jks.metadata",
      "type": "java.util.Map<java.lang.String, java.lang.String>",
      "description": "Metadata properties."
    },
    {
      "name": "connector.eidas.credentials.sign.jks.store-reference",
      "type": "java.lang.String",
      "description": "A store reference. As an alternative to giving the key store configuration, a reference to a key store configuration may be given. This feature may be used when one key store holds several keys."
    },
    {
      "name": "connector.eidas.credentials.sign.jks.store.location",
      "type": "java.lang.String",
      "description": "Location of the resource containing the store content."
    },
    {
      "name": "connector.eidas.credentials.sign.jks.store.password",
      "type": "java.lang.String",
      "description": "Password used to access the store."
    },
    {
      "name": "connector.eidas.credentials.sign.jks.store.type",
      "type": "java.lang.String",
      "description": "Type of the store to create, e.g., JKS, PKCS12 or PKCS11."
    },
    {
      "name": "connector.eidas.credentials.sign.jks.store.provider",
      "type": "java.lang.String",
      "description": "Security provider for the store."
    },
    {
      "name": "connector.eidas.credentials.sign.jks.store.pkcs11.configuration-file",
      "type": "java.lang.String",
      "description": "The complete path of the PKCS#11 configuration file with which the PKCS#11 device is configured."
    },
    {
      "name": "connector.eidas.credentials.sign.jks.store.pkcs11.settings.library",
      "type": "java.lang.String",
      "description": "The PKCS#11 library path."
    },
    {
      "name": "connector.eidas.credentials.sign.jks.store.pkcs11.settings.name",
      "type": "java.lang.String",
      "description": "The name of the PKCS#11 slot."
    },
    {
      "name": "connector.eidas.credentials.sign.jks.store.pkcs11.settings.slot",
      "type": "java.lang.String",
      "description": "The slot number/id to use."
    },
    {
      "name": "connector.eidas.credentials.sign.jks.store.pkcs11.settings.slot-list-index",
      "type": "java.lang.Integer",
      "description": "The slot index to use."
    },
    {
      "name": "connector.eidas.credentials.sign.jks.monitor",
      "type": "java.lang.Boolean",
      "description": "Whether the credential should be prepared for monitoring. If set, a test function and a KeyStoreReloader will be assigned."
    },
    {
      "name": "connector.eidas.credentials.sign.jks.key.alias",
      "type": "java.lang.String",
      "description": "The alias that identifies the key pair in the key store."
    },
    {
      "name": "connector.eidas.credentials.sign.jks.key.certificates",
      "type": "java.lang.String",
      "description": "For some credentials where an underlying KeyStore is being used, an external certificate should be used. The most typical example would be a PKCS#11 key store where the certificate of the key pair resides outside the HSM device. This setting holds the location or content of the certificate or certificate chain in PEM format."
    },
    {
      "name": "connector.eidas.credentials.sign.jks.key.key-password",
      "type": "java.lang.String",
      "description": "The password to unlock the key entry identified by the given alias. If not given, the store password will be used\n     * (in these cases, using a store reference will not function)."
    },
    {
      "name": "connector.eidas.credentials.sign.pem.public-key",
      "type": "java.lang.String",
      "description": "Location or content of the public key in PEM format. This setting is mutually exclusive with the certificates setting."
    },
    {
      "name": "connector.eidas.credentials.sign.pem.certificates",
      "type": "java.lang.String",
      "description": "Location or content of the certificate or certificate chain in PEM format. If more than one certificate is supplied, the entity certificate, i.e., the certificate holding the public key of the key pair, must be placed first. This setting is mutually exclusive with the public-key setting."
    },
    {
      "name": "connector.eidas.credentials.sign.pem.private-key",
      "type": "java.lang.String",
      "description": "Location or content of the private key in PEM format."
    },
    {
      "name": "connector.eidas.credentials.sign.pem.key-password",
      "type": "java.lang.String",
      "description": "Password used to decrypt an encrypted private key."
    },
    {
      "name": "connector.eidas.credentials.sign.pem.name",
      "type": "java.lang.String",
      "description": "The name of the credential."
    },
    {
      "name": "connector.eidas.credentials.sign.pem.key-id",
      "type": "java.lang.String",
      "description": "Key identifier metadata property."
    },
    {
      "name": "connector.eidas.credentials.sign.pem.issued-at",
      "type": "java.time.Instant",
      "description": "Issued-at metadata property."
    },
    {
      "name": "connector.eidas.credentials.sign.pem.expires-at",
      "type": "java.time.Instant",
      "description": "Expires-at metadata property."
    },
    {
      "name": "connector.eidas.credentials.sign.pem.metadata",
      "type": "java.util.Map<java.lang.String, java.lang.String>",
      "description": "Metadata properties."
    },
    {
      "name": "connector.eidas.credentials.encrypt.bundle",
      "type": "java.lang.String",
      "description": "Pointer to a pre-registered credential."
    },
    {
      "name": "connector.eidas.credentials.encrypt.jks.name",
      "type": "java.lang.String",
      "description": "The name of the credential."
    },
    {
      "name": "connector.eidas.credentials.encrypt.jks.key-id",
      "type": "java.lang.String",
      "description": "Key identifier metadata property."
    },
    {
      "name": "connector.eidas.credentials.encrypt.jks.issued-at",
      "type": "java.time.Instant",
      "description": "Issued-at metadata property."
    },
    {
      "name": "connector.eidas.credentials.encrypt.jks.expires-at",
      "type": "java.time.Instant",
      "description": "Expires-at metadata property."
    },
    {
      "name": "connector.eidas.credentials.encrypt.jks.metadata",
      "type": "java.util.Map<java.lang.String, java.lang.String>",
      "description": "Metadata properties."
    },
    {
      "name": "connector.eidas.credentials.encrypt.jks.store-reference",
      "type": "java.lang.String",
      "description": "A store reference. As an alternative to giving the key store configuration, a reference to a key store configuration may be given. This feature may be used when one key store holds several keys."
    },
    {
      "name": "connector.eidas.credentials.encrypt.jks.store.location",
      "type": "java.lang.String",
      "description": "Location of the resource containing the store content."
    },
    {
      "name": "connector.eidas.credentials.encrypt.jks.store.password",
      "type": "java.lang.String",
      "description": "Password used to access the store."
    },
    {
      "name": "connector.eidas.credentials.encrypt.jks.store.type",
      "type": "java.lang.String",
      "description": "Type of the store to create, e.g., JKS, PKCS12 or PKCS11."
    },
    {
      "name": "connector.eidas.credentials.encrypt.jks.store.provider",
      "type": "java.lang.String",
      "description": "Security provider for the store."
    },
    {
      "name": "connector.eidas.credentials.encrypt.jks.store.pkcs11.configuration-file",
      "type": "java.lang.String",
      "description": "The complete path of the PKCS#11 configuration file with which the PKCS#11 device is configured."
    },
    {
      "name": "connector.eidas.credentials.encrypt.jks.store.pkcs11.settings.library",
      "type": "java.lang.String",
      "description": "The PKCS#11 library path."
    },
    {
      "name": "connector.eidas.credentials.encrypt.jks.store.pkcs11.settings.name",
      "type": "java.lang.String",
      "description": "The name of the PKCS#11 slot."
    },
    {
      "name": "connector.eidas.credentials.encrypt.jks.store.pkcs11.settings.slot",
      "type": "java.lang.String",
      "description": "The slot number/id to use."
    },
    {
      "name": "connector.eidas.credentials.encrypt.jks.store.pkcs11.settings.slot-list-index",
      "type": "java.lang.Integer",
      "description": "The slot index to use."
    },
    {
      "name": "connector.eidas.credentials.encrypt.jks.monitor",
      "type": "java.lang.Boolean",
      "description": "Whether the credential should be prepared for monitoring. If set, a test function and a KeyStoreReloader will be assigned."
    },
    {
      "name": "connector.eidas.credentials.encrypt.jks.key.alias",
      "type": "java.lang.String",
      "description": "The alias that identifies the key pair in the key store."
    },
    {
      "name": "connector.eidas.credentials.encrypt.jks.key.certificates",
      "type": "java.lang.String",
      "description": "For some credentials where an underlying KeyStore is being used, an external certificate should be used. The most typical example would be a PKCS#11 key store where the certificate of the key pair resides outside the HSM device. This setting holds the location or content of the certificate or certificate chain in PEM format."
    },
    {
      "name": "connector.eidas.credentials.encrypt.jks.key.key-password",
      "type": "java.lang.String",
      "description": "The password to unlock the key entry identified by the given alias. If not given, the store password will be used\n     * (in these cases, using a store reference will not function)."
    },
    {
      "name": "connector.eidas.credentials.encrypt.pem.public-key",
      "type": "java.lang.String",
      "description": "Location or content of the public key in PEM format. This setting is mutually exclusive with the certificates setting."
    },
    {
      "name": "connector.eidas.credentials.encrypt.pem.certificates",
      "type": "java.lang.String",
      "description": "Location or content of the certificate or certificate chain in PEM format. If more than one certificate is supplied, the entity certificate, i.e., the certificate holding the public key of the key pair, must be placed first. This setting is mutually exclusive with the public-key setting."
    },
    {
      "name": "connector.eidas.credentials.encrypt.pem.private-key",
      "type": "java.lang.String",
      "description": "Location or content of the private key in PEM format."
    },
    {
      "name": "connector.eidas.credentials.encrypt.pem.key-password",
      "type": "java.lang.String",
      "description": "Password used to decrypt an encrypted private key."
    },
    {
      "name": "connector.eidas.credentials.encrypt.pem.name",
      "type": "java.lang.String",
      "description": "The name of the credential."
    },
    {
      "name": "connector.eidas.credentials.encrypt.pem.key-id",
      "type": "java.lang.String",
      "description": "Key identifier metadata property."
    },
    {
      "name": "connector.eidas.credentials.encrypt.pem.issued-at",
      "type": "java.time.Instant",
      "description": "Issued-at metadata property."
    },
    {
      "name": "connector.eidas.credentials.encrypt.pem.expires-at",
      "type": "java.time.Instant",
      "description": "Expires-at metadata property."
    },
    {
      "name": "connector.eidas.credentials.encrypt.pem.metadata",
      "type": "java.util.Map<java.lang.String, java.lang.String>",
      "description": "Metadata properties."
    },
    {
      "name": "connector.eidas.credentials.default-credential.bundle",
      "type": "java.lang.String",
      "description": "Pointer to a pre-registered credential."
    },
    {
      "name": "connector.eidas.credentials.default-credential.jks.name",
      "type": "java.lang.String",
      "description": "The name of the credential."
    },
    {
      "name": "connector.eidas.credentials.default-credential.jks.key-id",
      "type": "java.lang.String",
      "description": "Key identifier metadata property."
    },
    {
      "name": "connector.eidas.credentials.default-credential.jks.issued-at",
      "type": "java.time.Instant",
      "description": "Issued-at metadata property."
    },
    {
      "name": "connector.eidas.credentials.default-credential.jks.expires-at",
      "type": "java.time.Instant",
      "description": "Expires-at metadata property."
    },
    {
      "name": "connector.eidas.credentials.default-credential.jks.metadata",
      "type": "java.util.Map<java.lang.String, java.lang.String>",
      "description": "Metadata properties."
    },
    {
      "name": "connector.eidas.credentials.default-credential.jks.store-reference",
      "type": "java.lang.String",
      "description": "A store reference. As an alternative to giving the key store configuration, a reference to a key store configuration may be given. This feature may be used when one key store holds several keys."
    },
    {
      "name": "connector.eidas.credentials.default-credential.jks.store.location",
      "type": "java.lang.String",
      "description": "Location of the resource containing the store content."
    },
    {
      "name": "connector.eidas.credentials.default-credential.jks.store.password",
      "type": "java.lang.String",
      "description": "Password used to access the store."
    },
    {
      "name": "connector.eidas.credentials.default-credential.jks.store.type",
      "type": "java.lang.String",
      "description": "Type of the store to create, e.g., JKS, PKCS12 or PKCS11."
    },
    {
      "name": "connector.eidas.credentials.default-credential.jks.store.provider",
      "type": "java.lang.String",
      "description": "Security provider for the store."
    },
    {
      "name": "connector.eidas.credentials.default-credential.jks.store.pkcs11.configuration-file",
      "type": "java.lang.String",
      "description": "The complete path of the PKCS#11 configuration file with which the PKCS#11 device is configured."
    },
    {
      "name": "connector.eidas.credentials.default-credential.jks.store.pkcs11.settings.library",
      "type": "java.lang.String",
      "description": "The PKCS#11 library path."
    },
    {
      "name": "connector.eidas.credentials.default-credential.jks.store.pkcs11.settings.name",
      "type": "java.lang.String",
      "description": "The name of the PKCS#11 slot."
    },
    {
      "name": "connector.eidas.credentials.default-credential.jks.store.pkcs11.settings.slot",
      "type": "java.lang.String",
      "description": "The slot number/id to use."
    },
    {
      "name": "connector.eidas.credentials.default-credential.jks.store.pkcs11.settings.slot-list-index",
      "type": "java.lang.Integer",
      "description": "The slot index to use."
    },
    {
      "name": "connector.eidas.credentials.default-credential.jks.monitor",
      "type": "java.lang.Boolean",
      "description": "Whether the credential should be prepared for monitoring. If set, a test function and a KeyStoreReloader will be assigned."
    },
    {
      "name": "connector.eidas.credentials.default-credential.jks.key.alias",
      "type": "java.lang.String",
      "description": "The alias that identifies the key pair in the key store."
    },
    {
      "name": "connector.eidas.credentials.default-credential.jks.key.certificates",
      "type": "java.lang.String",
      "description": "For some credentials where an underlying KeyStore is being used, an external certificate should be used. The most typical example would be a PKCS#11 key store where the certificate of the key pair resides outside the HSM device. This setting holds the location or content of the certificate or certificate chain in PEM format."
    },
    {
      "name": "connector.eidas.credentials.default-credential.jks.key.key-password",
      "type": "java.lang.String",
      "description": "The password to unlock the key entry identified by the given alias. If not given, the store password will be used\n     * (in these cases, using a store reference will not function)."
    },
    {
      "name": "connector.eidas.credentials.default-credential.pem.public-key",
      "type": "java.lang.String",
      "description": "Location or content of the public key in PEM format. This setting is mutually exclusive with the certificates setting."
    },
    {
      "name": "connector.eidas.credentials.default-credential.pem.certificates",
      "type": "java.lang.String",
      "description": "Location or content of the certificate or certificate chain in PEM format. If more than one certificate is supplied, the entity certificate, i.e., the certificate holding the public key of the key pair, must be placed first. This setting is mutually exclusive with the public-key setting."
    },
    {
      "name": "connector.eidas.credentials.default-credential.pem.private-key",
      "type": "java.lang.String",
      "description": "Location or content of the private key in PEM format."
    },
    {
      "name": "connector.eidas.credentials.default-credential.pem.key-password",
      "type": "java.lang.String",
      "description": "Password used to decrypt an encrypted private key."
    },
    {
      "name": "connector.eidas.credentials.default-credential.pem.name",
      "type": "java.lang.String",
      "description": "The name of the credential."
    },
    {
      "name": "connector.eidas.credentials.default-credential.pem.key-id",
      "type": "java.lang.String",
      "description": "Key identifier metadata property."
    },
    {
      "name": "connector.eidas.credentials.default-credential.pem.issued-at",
      "type": "java.time.Instant",
      "description": "Issued-at metadata property."
    },
    {
      "name": "connector.eidas.credentials.default-credential.pem.expires-at",
      "type": "java.time.Instant",
      "description": "Expires-at metadata property."
    },
    {
      "name": "connector.eidas.credentials.default-credential.pem.metadata",
      "type": "java.util.Map<java.lang.String, java.lang.String>",
      "description": "Metadata properties."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.bundle",
      "type": "java.lang.String",
      "description": "Pointer to a pre-registered credential."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.jks.name",
      "type": "java.lang.String",
      "description": "The name of the credential."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.jks.key-id",
      "type": "java.lang.String",
      "description": "Key identifier metadata property."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.jks.issued-at",
      "type": "java.time.Instant",
      "description": "Issued-at metadata property."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.jks.expires-at",
      "type": "java.time.Instant",
      "description": "Expires-at metadata property."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.jks.metadata",
      "type": "java.util.Map<java.lang.String, java.lang.String>",
      "description": "Metadata properties."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.jks.store-reference",
      "type": "java.lang.String",
      "description": "A store reference. As an alternative to giving the key store configuration, a reference to a key store configuration may be given. This feature may be used when one key store holds several keys."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.jks.store.location",
      "type": "java.lang.String",
      "description": "Location of the resource containing the store content."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.jks.store.password",
      "type": "java.lang.String",
      "description": "Password used to access the store."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.jks.store.type",
      "type": "java.lang.String",
      "description": "Type of the store to create, e.g., JKS, PKCS12 or PKCS11."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.jks.store.provider",
      "type": "java.lang.String",
      "description": "Security provider for the store."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.jks.store.pkcs11.configuration-file",
      "type": "java.lang.String",
      "description": "The complete path of the PKCS#11 configuration file with which the PKCS#11 device is configured."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.jks.store.pkcs11.settings.library",
      "type": "java.lang.String",
      "description": "The PKCS#11 library path."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.jks.store.pkcs11.settings.name",
      "type": "java.lang.String",
      "description": "The name of the PKCS#11 slot."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.jks.store.pkcs11.settings.slot",
      "type": "java.lang.String",
      "description": "The slot number/id to use."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.jks.store.pkcs11.settings.slot-list-index",
      "type": "java.lang.Integer",
      "description": "The slot index to use."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.jks.monitor",
      "type": "java.lang.Boolean",
      "description": "Whether the credential should be prepared for monitoring. If set, a test function and a KeyStoreReloader will be assigned."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.jks.key.alias",
      "type": "java.lang.String",
      "description": "The alias that identifies the key pair in the key store."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.jks.key.certificates",
      "type": "java.lang.String",
      "description": "For some credentials where an underlying KeyStore is being used, an external certificate should be used. The most typical example would be a PKCS#11 key store where the certificate of the key pair resides outside the HSM device. This setting holds the location or content of the certificate or certificate chain in PEM format."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.jks.key.key-password",
      "type": "java.lang.String",
      "description": "The password to unlock the key entry identified by the given alias. If not given, the store password will be used\n     * (in these cases, using a store reference will not function)."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.pem.public-key",
      "type": "java.lang.String",
      "description": "Location or content of the public key in PEM format. This setting is mutually exclusive with the certificates setting."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.pem.certificates",
      "type": "java.lang.String",
      "description": "Location or content of the certificate or certificate chain in PEM format. If more than one certificate is supplied, the entity certificate, i.e., the certificate holding the public key of the key pair, must be placed first. This setting is mutually exclusive with the public-key setting."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.pem.private-key",
      "type": "java.lang.String",
      "description": "Location or content of the private key in PEM format."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.pem.key-password",
      "type": "java.lang.String",
      "description": "Password used to decrypt an encrypted private key."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.pem.name",
      "type": "java.lang.String",
      "description": "The name of the credential."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.pem.key-id",
      "type": "java.lang.String",
      "description": "Key identifier metadata property."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.pem.issued-at",
      "type": "java.time.Instant",
      "description": "Issued-at metadata property."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.pem.expires-at",
      "type": "java.time.Instant",
      "description": "Expires-at metadata property."
    },
    {
      "name": "connector.eidas.credentials.previous-encrypt.pem.metadata",
      "type": "java.util.Map<java.lang.String, java.lang.String>",
      "description": "Metadata properties."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.bundle",
      "type": "java.lang.String",
      "description": "Pointer to a pre-registered credential."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.jks.name",
      "type": "java.lang.String",
      "description": "The name of the credential."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.jks.key-id",
      "type": "java.lang.String",
      "description": "Key identifier metadata property."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.jks.issued-at",
      "type": "java.time.Instant",
      "description": "Issued-at metadata property."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.jks.expires-at",
      "type": "java.time.Instant",
      "description": "Expires-at metadata property."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.jks.metadata",
      "type": "java.util.Map<java.lang.String, java.lang.String>",
      "description": "Metadata properties."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.jks.store-reference",
      "type": "java.lang.String",
      "description": "A store reference. As an alternative to giving the key store configuration, a reference to a key store configuration may be given. This feature may be used when one key store holds several keys."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.jks.store.location",
      "type": "java.lang.String",
      "description": "Location of the resource containing the store content."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.jks.store.password",
      "type": "java.lang.String",
      "description": "Password used to access the store."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.jks.store.type",
      "type": "java.lang.String",
      "description": "Type of the store to create, e.g., JKS, PKCS12 or PKCS11."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.jks.store.provider",
      "type": "java.lang.String",
      "description": "Security provider for the store."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.jks.store.pkcs11.configuration-file",
      "type": "java.lang.String",
      "description": "The complete path of the PKCS#11 configuration file with which the PKCS#11 device is configured."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.jks.store.pkcs11.settings.library",
      "type": "java.lang.String",
      "description": "The PKCS#11 library path."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.jks.store.pkcs11.settings.name",
      "type": "java.lang.String",
      "description": "The name of the PKCS#11 slot."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.jks.store.pkcs11.settings.slot",
      "type": "java.lang.String",
      "description": "The slot number/id to use."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.jks.store.pkcs11.settings.slot-list-index",
      "type": "java.lang.Integer",
      "description": "The slot index to use."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.jks.monitor",
      "type": "java.lang.Boolean",
      "description": "Whether the credential should be prepared for monitoring. If set, a test function and a KeyStoreReloader will be assigned."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.jks.key.alias",
      "type": "java.lang.String",
      "description": "The alias that identifies the key pair in the key store."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.jks.key.certificates",
      "type": "java.lang.String",
      "description": "For some credentials where an underlying KeyStore is being used, an external certificate should be used. The most typical example would be a PKCS#11 key store where the certificate of the key pair resides outside the HSM device. This setting holds the location or content of the certificate or certificate chain in PEM format."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.jks.key.key-password",
      "type": "java.lang.String",
      "description": "The password to unlock the key entry identified by the given alias. If not given, the store password will be used\n     * (in these cases, using a store reference will not function)."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.pem.public-key",
      "type": "java.lang.String",
      "description": "Location or content of the public key in PEM format. This setting is mutually exclusive with the certificates setting."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.pem.certificates",
      "type": "java.lang.String",
      "description": "Location or content of the certificate or certificate chain in PEM format. If more than one certificate is supplied, the entity certificate, i.e., the certificate holding the public key of the key pair, must be placed first. This setting is mutually exclusive with the public-key setting."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.pem.private-key",
      "type": "java.lang.String",
      "description": "Location or content of the private key in PEM format."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.pem.key-password",
      "type": "java.lang.String",
      "description": "Password used to decrypt an encrypted private key."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.pem.name",
      "type": "java.lang.String",
      "description": "The name of the credential."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.pem.key-id",
      "type": "java.lang.String",
      "description": "Key identifier metadata property."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.pem.issued-at",
      "type": "java.time.Instant",
      "description": "Issued-at metadata property."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.pem.expires-at",
      "type": "java.time.Instant",
      "description": "Expires-at metadata property."
    },
    {
      "name": "connector.eidas.credentials.metadata-sign.pem.metadata",
      "type": "java.util.Map<java.lang.String, java.lang.String>",
      "description": "Metadata properties."
    }
  ]
}
