<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>eidas-connector-dev-idp</artifactId>
  <packaging>jar</packaging>
  
  <parent>
    <groupId>se.elegnamnden.eidas.idp</groupId>
    <artifactId>eidas-connector-base-parent</artifactId>
    <version>1.6.4</version>
  </parent>

  <name>eIDAS :: Swedish eIDAS connector - Devel</name>
  <description>Swedish eIDAS connector IdP - Devel</description>
  <url>https://github.com/swedenconnect/eidas-connector</url>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:https://github.com/swedenconnect/eidas-connector.git</connection>
    <developerConnection>scm:git:https://github.com/swedenconnect/eidas-connector.git</developerConnection>
    <url>https://github.com/swedenconnect/eidas-connector/tree/master</url>
  </scm>

  <developers>
    <developer>
      <name>Martin Lindstr√∂m</name>
      <email>martin.lindstrom@litsec.se</email>
      <organization>Litsec AB</organization>
      <organizationUrl>http://www.litsec.se</organizationUrl>
    </developer>
  </developers>

  <properties>
    <docker.image.prefix>docker.eidastest.se:5000</docker.image.prefix>
    
    <eidas-connector-idp.version>${project.version}</eidas-connector-idp.version>
    
    <idp.build-timestamp>${maven.build.timestamp}</idp.build-timestamp>
    <maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
    
    <tomcat.war.name>idp.war</tomcat.war.name>
    
    <!-- For filtering -->
    <display-name.en>eIDAS International eID - Sandbox</display-name.en>
    <display-name.sv>eIDAS Internationell eID - Sandbox</display-name.sv>
    <description.en>Test IdP for eIDAS authentication - Sandbox</description.en>
    <description.sv>Test-legitimeringstj\u00e4nst f\u00f6r eIDAS legitimering - Sandbox</description.sv>    
    
  </properties>

  <dependencies>

  </dependencies>

  <build>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>**/*.properties</include>
          <include>logback-local.xml</include>
        </includes>
      </resource>
      <resource>
        <directory>src/main/override</directory>
        <filtering>true</filtering>
        <includes>
          <include>metadata.properties</include>
        </includes>        
      </resource>
    </resources>

    <plugins>
    
      <plugin>
        <!-- https://maven.apache.org/plugins/maven-dependency-plugin/unpack-mojo.html -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>unpack</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>unpack</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>se.elegnamnden.eidas.idp</groupId>
                  <artifactId>eidas-connector-idp</artifactId>
                  <version>${eidas-connector-idp.version}</version>
                  <type>zip</type>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>

        </executions>
      </plugin>      
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-version</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <resources>
                <resource>
                  <directory>src/main/override</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>metadata.properties</include>
                  </includes>
                </resource>                
              </resources>
              <outputDirectory>${project.build.directory}/metadata-override</outputDirectory>
              <overwrite>true</overwrite>
              <delimiters>
                <delimiter>${*}</delimiter>
                <delimiter>@</delimiter>
              </delimiters>
            </configuration>
          </execution>
        </executions>
      </plugin>
      

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
        
          <execution>
            <id>copy-shib</id>
            <phase>process-resources</phase>
            <configuration>
              <target>
                <echo>Copy base Shibboleth installation and Tomcat</echo>
                <copy toDir="${project.build.directory}/shibboleth" overwrite="true">
                  <fileset dir="${project.build.directory}/dependency/shibboleth" />
                </copy>
                <copy todir="${project.build.directory}/tomcat" overwrite="true">
                  <fileset dir="${project.build.directory}/dependency/tomcat" />
                </copy>
                <chmod perm="755" dir="${project.build.directory}/tomcat/bin" includes="**/*.sh"/>                
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          
          <execution>
            <id>copy-shibboleth-config</id>
            <phase>process-resources</phase>
            <configuration>
              <target>
                <echo>Copy Shibboleth override config</echo>
                <copy todir="${project.build.directory}/shibboleth/" overwrite="true">
                  <fileset dir="${project.basedir}/src/main/shibboleth/config"/>
                </copy>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>            
          </execution>
          <execution>
            <id>copy-shibboleth-config-override</id>
            <phase>process-resources</phase>
            <configuration>
              <target>
                <echo>Copy Shibboleth override config</echo>
                <copy todir="${project.build.directory}/shibboleth/metadata/" overwrite="true">
                  <fileset dir="${project.build.directory}/metadata-override"/>
                </copy>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>            
          </execution>          
                    
          <execution>
            <id>run-shibboleth-build</id>
            <phase>package</phase>
            <configuration>
              <target>
                 
                <echo>Copy tomcat override config</echo>
                <copy todir="${project.build.directory}/tomcat/conf/" overwrite="true">
                  <fileset dir="${project.basedir}/src/main/tomcat"/>
                </copy>

                <echo>Copy webapp content</echo>
                <copy todir="${project.build.directory}/shibboleth/edit-webapp" overwrite="true">
                  <fileset dir="${project.basedir}/src/main/webapp"/>
                </copy>

                <echo>Copy this project lib</echo>        
                <copy file="${project.build.directory}/${project.artifactId}-${project.version}.jar" tofile="${project.build.directory}/shibboleth/edit-webapp/WEB-INF/lib/${project.build.finalName}.jar"/>

                <echo>Running build on Shibboleth installation</echo>
                <chmod perm="755" dir="${project.build.directory}/shibboleth/bin" includes="**/*.sh"/>
                <exec dir="${project.build.directory}/shibboleth/bin/" executable="cmd" osfamily="windows">
                  <arg value="/c"/>
                  <arg value="build.bat"/>
                  <arg value="-Didp.noprompt=true"/>
                </exec>
                <exec dir="${project.build.directory}/shibboleth/bin/" executable="./build.sh" osfamily="unix">
                  <arg value="-Didp.noprompt=true"/>
                </exec>

                <echo>Installing new war into tomcat</echo>
                <delete includeEmptyDirs="true">
                  <fileset dir="${project.build.directory}/tomcat/webapps/" includes="**/*" />
                </delete>
                                
                <copy file="${project.build.directory}/shibboleth/war/idp.war" tofile="${project.build.directory}/tomcat/webapps/${tomcat.war.name}"/>
                <copy file="${project.build.directory}/dependency/scripts/dockerStart.sh" tofile="${project.build.directory}/tomcat/bin/dockerStart.sh" /> 
                <chmod perm="755" dir="${project.build.directory}/tomcat/bin" includes="**/*.sh"/>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <!-- Support for Docker -->
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>dockerfile-maven-plugin</artifactId>
        <configuration>
          <repository>${docker.image.prefix}/${project.artifactId}</repository>
          <tag>latest</tag>
          <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
        </configuration>
      </plugin>

    </plugins>
  </build>

  <profiles>
  
    <profile>
      <id>internal</id>
      
      <properties>
        <tomcat.war.name>internal#idp.war</tomcat.war.name>
        
        <!-- For filtering -->
        <display-name.en>eIDAS International eID - For internal tests</display-name.en>
        <display-name.sv>eIDAS Internationell eID - F\u00f6r interna tester</display-name.sv>
        <description.en>Test IdP for eIDAS authentication - For internal tests</description.en>
	      <description.sv>Test-legitimeringstj\u00e4nst f\u00f6r eIDAS legitimering -  F\u00f6r interna tester</description.sv>
      </properties>
      
      <build>
        <plugins>
          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>dockerfile-maven-plugin</artifactId>
            <configuration>
              <repository>${docker.image.prefix}/${project.artifactId}2</repository>
              <tag>latest</tag>
            <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
            </configuration>
          </plugin>        
        </plugins>
      </build>
    </profile>
      
    <profile>
      <id>eclipse-fix</id>
      <activation>
        <property>
          <name>m2e.version</name>
        </property>
      </activation>

      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.eclipse.m2e</groupId>
              <artifactId>lifecycle-mapping</artifactId>
              <version>1.0.0</version>
              <configuration>
                <lifecycleMappingMetadata>
                  <pluginExecutions>
                    <pluginExecution>
                      <pluginExecutionFilter>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <versionRange>2.8</versionRange>
                        <goals>
                          <goal>unpack</goal>
                        </goals>
                      </pluginExecutionFilter>
                      <action>
                        <ignore />
                      </action>
                    </pluginExecution>
                  </pluginExecutions>
                </lifecycleMappingMetadata>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
      
    </profile>
  </profiles>

</project>
